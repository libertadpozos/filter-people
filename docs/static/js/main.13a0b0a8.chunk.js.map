{"version":3,"sources":["components/People.js","components/Filters.js","components/Card.js","App.js","data/FetchData.js","index.js"],"names":["People","info","this","props","react_default","a","createElement","map","person","key","login","uuid","react_router_dom","to","concat","name","first","last","React","Component","Filters","_this$props","onGenderChange","genders","allCities","cities","onCityChange","type","id","value","onChange","checked","includes","htmlFor","city","Fragment","Card","match","cardId","params","arrCard","find","item","console","log","src","picture","thumbnail","alt","location","dob","age","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","people","data","isFetching","filters","getData","bind","assertThisInitialized","handlerGenderFilter","handlerCityFilter","_this2","fetch","then","response","json","results","setState","prevState","objectSpread","filter","ind","arr","indexOf","event","_event$target","target","_event$target2","_this3","_this$state$filters","className","react_router","exact","path","render","components_Filters","components_People","user","length","gender","routerProps","components_Card","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.13a0b0a8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass People extends React.Component {\n  render() {\n    const { info } = this.props;\n    return (\n      <ul>\n        {info.map(person => (\n          <li key={person.login.uuid}>\n            <Link to={`/card/${person.login.uuid}`}>\n              <h2>{`${person.name.first} ${person.name.last}`}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nPeople.propTypes = {\n  info: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default People;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Filters extends React.Component {\n  render() {\n    const { onGenderChange, genders, allCities, cities, onCityChange } = this.props;\n    return (\n      <form>\n        <fieldset>\n          <legend>Gender</legend>\n          <input\n            type=\"checkbox\"\n            name=\"genders\"\n            id=\"female\"\n            value=\"female\"\n            onChange={onGenderChange}\n            checked={genders.includes(\"female\")}\n          />\n          <label htmlFor=\"female\">Female</label>\n          <input\n            type=\"checkbox\"\n            name=\"genders\"\n            id=\"male\"\n            value=\"male\"\n            onChange={onGenderChange}\n            checked={genders.includes(\"male\")}\n          />\n          <label htmlFor=\"male\">Male</label>\n        </fieldset>\n        <fieldset>\n        <legend>Cities</legend>\n          {allCities.map(city => {\n            return (\n              <React.Fragment key={city}>\n                <input\n                  type=\"checkbox\"\n                  name=\"cities\"\n                  id={city}\n                  value={city}\n                  onChange={onCityChange}\n                  checked={cities.includes(city)}\n                />\n                <label htmlFor={city}>{city}</label>\n              </React.Fragment>\n            );\n          })}\n        </fieldset>\n        \n      </form>\n    );\n  }\n}\n\nFilters.propTypes = {\n  onGenderChange: PropTypes.func.isRequired,\n  genders: PropTypes.arrayOf(PropTypes.string).isRequired,\n  allCities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  cities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onCityChange: PropTypes.func.isRequired,\n\n};\n\nexport default Filters;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass Card extends React.Component {\n  render() {\n    const { match, info } = this.props;\n    const { cardId } = match.params;\n    const arrCard = info.find(item => item.login.uuid === cardId);\n    console.log(info);\n\n    return (\n      <article>\n        <h2>{`${arrCard.name.first} ${arrCard.name.last}`}</h2>\n        <img src={arrCard.picture.thumbnail} alt={arrCard.name.first} />\n        <p>{arrCard.location.city}</p>\n        <p>{arrCard.dob.age}</p>\n        <Link to=\"/\">Back</Link>\n      </article>\n    );\n  }\n}\nCard.propTypes = {\n  info: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./App.css\";\nimport People from \"./components/People\";\nimport Filters from \"./components/Filters\";\nimport { fetchData } from \"./data/FetchData\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Card from \"./components/Card\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: {\n        data: [],\n        isFetching: true\n      },\n      filters: {\n        genders: [],\n        cities: [],\n        allCities: []\n      }\n    };\n    this.getData = this.getData.bind(this);\n    this.handlerGenderFilter = this.handlerGenderFilter.bind(this);\n    this.handlerCityFilter = this.handlerCityFilter.bind(this);\n  }\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    fetchData().then(data => {\n      const info = data.results;\n      this.setState(prevState => {\n        return {\n          people: {\n            data: info,\n            isFetching: false\n          },\n          filters: {\n            ...prevState.filters,\n            allCities: data.results\n              .map(item => item.location.city)\n              .filter((item, ind, arr) => arr.indexOf(item) === ind)\n          }\n        };\n      });\n    });\n  }\n\n  handlerGenderFilter(event) {\n    const { value, checked } = event.target;\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          genders: checked\n            ? prevState.filters.genders.concat(value)\n            : prevState.filters.genders.filter(item => item !== value)\n        }\n      };\n    });\n  }\n\n  handlerCityFilter(event) {\n    const { value, checked } = event.target;\n    console.log(value, checked);\n\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          cities: prevState.filters.cities.find(item => item === value)\n            ? prevState.filters.cities.filter(item => item !== value)\n            : prevState.filters.cities.concat(value)\n        }\n      };\n    });\n  }\n\n  render() {\n    const { genders, cities, allCities } = this.state.filters;\n    const { data } = this.state.people;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Random People</h1>\n        </header>\n        {this.state.people.isFetching ? (\n          <p>Loading...</p>\n        ) : (\n          <React.Fragment>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <React.Fragment>\n                    <Filters\n                      onGenderChange={this.handlerGenderFilter}\n                      genders={genders}\n                      allCities={allCities}\n                      cities={cities}\n                      onCityChange={this.handlerCityFilter}\n                    />\n                    <People\n                      info={data\n                        .filter(user => {\n                          if (!genders.length) {\n                            return true;\n                          } else {\n                            return genders.includes(user.gender);\n                          }\n                        })\n                        .filter(\n                          user =>\n                            !cities.length ||\n                            cities.includes(user.location.city)\n                        )}\n                    />\n                  </React.Fragment>\n                )}\n              />\n              <Route\n                path=\"/card/:cardId\"\n                render={routerProps => (\n                  <Card match={routerProps.match} info={data} />\n                )}\n              />\n            </Switch>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const urlApi= \"https://randomuser.me/api/?results=50\";\n\nconst fetchData =() =>fetch(urlApi).then(response=> response.json())\n\nexport {fetchData};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n<HashRouter>\n<App />\n</HashRouter>\n, document.getElementById('root'));\n\n\n"],"sourceRoot":""}